apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: vs
spec:
  interval: 60m
  chart:
    spec:
      chart: vs
      version: 2.2.4
      sourceRef:
        kind: HelmRepository
        name: eox-charts
        namespace: rm
  values:
    global:
      # ???: is this missing...
      # env:
      #   REGISTRAR_REPLACE: "true"
      #   CPL_VSIL_CURL_ALLOWED_EXTENSIONS: .TIF,.tif,.xml,.jp2
      #   startup_scripts:
      #     - /registrar_pycsw/registrar_pycsw/initialize-collections.sh

      # the tls host is still needed to provide the hostname for the view server client
      ingress:
        tls:
          - hosts:
              - data-access.{{ workspace_name }}.develop.eoepca.org

      storage:
        data:
          data:
            # TODO: this values are secret pass them as secret
            type: "S3"
            access_key_id: {{ access_key_id }}
            secret_access_key: {{ secret_access_key }}
            bucket: {{ bucket }}
            endpoint_url: https://cf2.cloudferro.com:8080
            region: RegionOne

      # ???: is `cache` needed?
      # cache: {}

      # ???: is `metadata` needed?
      # metadata: {}

      # ???: is `layers` needed?
      # layers: []

      # ???: is `collections` needed?
      # collections: {}

      # ???: is `productTypes` needed?
      # productTypes: []

    harvester:
      image:
        repository: eoepca/rm-harvester
        tag: 1.1.0
      config:
        # ???: is `redis` needed?
        # redis:
        #   host: data-access-redis-master
        #   port: 6379
        harvesters:
          # ???: this is different to the system `data-access` which
          # uses `Creodias-Opensearch` of type `OpenSearch`
          - name: harvest-bucket-catalog
            resource:
              type: "STACCatalog"
              source:
                type: "S3"
                bucket: bucket
                access_key_id: {{ access_key_id }}
                secret_access_key: {{ secret_access_key }}
                endpoint_url: https://cf2.cloudferro.com:8080
                region_name: RegionOne
                validate_bucket_name: False
                public: False
                queue": "register_queue"

    registrar:
      replicaCount: 1
      image:
        repository: eoepca/rm-data-access-core
        tag: 1.2-dev3
      config:
        # ???: this has more config than system `data-acces`, which only has a single `backends.path`
        disableDefaultRoute: true
        routes:
          items:
            path: registrar.route.stac.ItemRoute
            queue: register_queue
            replace: true
            backends:
              - path: "registrar.backend.eoxserver.ItemBackend"
                kwargs:
                  instance_base_path: "/var/www/pvs/dev"
                  instance_name: "pvs_instance"
                  product_types: []
                  auto_create_product_types: True
              - path: "registrar_pycsw.backend.ItemBackend"
                kwargs:
                  repository_database_uri: "postgresql://postgres:mypass@resource-catalogue-db/pycsw"
                  ows_url: "https://data-access.{{ workspace_name }}.develop.eoepca.org/ows"
                  public_s3_url: "https://cf2.cloudferro.com:8080/{projectid}:{bucket}"

          collections:
            path: registrar.route.stac.CollectionRoute
            queue: register_collection_queue
            replace: true
            backends:
              - path: registrar_pycsw.backend.CollectionBackend
                kwargs:
                  repository_database_uri: postgresql://postgres:mypass@resource-catalogue-db/pycsw

          ades:
            path: registrar.route.json.JSONRoute
            queue: register_ades_queue
            replace: true
            backends:
              - path: registrar_pycsw.backend.ADESBackend
                kwargs:
                  repository_database_uri: postgresql://postgres:mypass@resource-catalogue-db/pycsw

          application:
            path: registrar.route.json.JSONRoute
            queue: register_application_queue
            replace: true
            backends:
              - path: registrar_pycsw.backend.CWLBackend
                kwargs:
                  repository_database_uri: "postgresql://postgres:mypass@resource-catalogue-db/pycsw"
                  ows_url: "https://data-access.{{ workspace_name }}.develop.eoepca.org/ows"
                  public_s3_url: "https://cf2.cloudferro.com:8080/{projectid}:{bucket}"

    database:
      persistence:
        enabled: true
        existingClaim: "" # we want the claim to be generated
        storageClass: managed-nfs-storage
        size: "100Gi"

    redis:
      usePassword: false
      persistence:
        existingClaim: ""
      master:
        persistence:
          storageClass: managed-nfs-storage
          size: "1Gi"
          existingClaim: ""

    cache:
      ingress:
        enabled: false

    client:
      image:
        tag: release-2.0.21
      ingress:
        enabled: false
      # ???: do we need this config element?
      # config:
      #   eoxserverDownloadEnabled: true
      #   timeDomain:
      #     - "2002-01-01T00:00:00Z"
      #     - "customClientDateFuture1"
      #   displayTimeDomain:
      #     - "customClientDatePast1"
      #     - "customClientDateFuture1"
      #   selectedTimeDomain:
      #     - "customClientDatePast2"
      #     - "today"
      #   customClientDaysPast1: 90
      #   customClientDaysPast2: 1
      #   customClientDaysFuture1: 7

    renderer:
      image:
        repository: eoepca/rm-data-access-core
        tag: 1.1.1
      ingress:
        enabled: false

    ingestor:
      replicaCount: 0
      ingress:
        enabled: false

    preprocessor:
      replicaCount: 0
